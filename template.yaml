apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ec2-instance
  title: Node.js App on AWS EC2 Instance
  description: Deploy a Node.js App on AWS EC2 Instance using Terraform
spec:
  owner: user:mrdankuta
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: App Name
          type: string
          description: Unique name for your app
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a Repo location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: Basic EC2 Cluster Configuration
      required:
        - instanceName
        - region
        - action
      properties:
        instanceName:
          title: Instance Name
          type: string
          description: The name of your EC2 instance
          ui:autofocus: true
        region:
          title: AWS Region
          type: string
          description: The AWS region where the instance will be deployed
          enum:
            - us-east-1
            - us-west-2
        action:
          title: Action
          type: string
          description: Action to perform (apply/destroy)
          enum:
            - apply
            - destroy

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    # Start a GitHub Action to build an EC2 instance with Terraform
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: manage-ec2.yaml
        repoUrl: 'github.com?repo=smpls-tf-ec2&owner=Makinates'
        branchOrTagName: 'main'
        workflowInputs:
          instanceName: ${{ parameters.instanceName }}
          awsRegion: ${{ parameters.region }}
          action: ${{ parameters.action }}
    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
